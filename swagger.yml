openapi: 3.0.0
info:
  title: Trades Management API
  description: Provides several endpoints to create, update and remove several system's resources like brokers, accounts, etc.
  version: 0.1.0
servers:
  - url: https://dev.test.com/v1
    description: Test server
paths:
  /brokers:
    post:
      summary: Create broker
      description: Create a new broker
      requestBody:
        description: Broker payload
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BrokerRequest"
            examples:
              request:
                $ref: "#/components/examples/BrokerRequest"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceCreated"
              example:
                uid: "A3520D74-A9D6-4B20-AC1B-3424F6AD9EB9"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                bad_request:
                  $ref: "#/components/examples/BrokerValidation"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                unauthorized:
                  $ref: "#/components/examples/Unauthorized"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                bad_request:
                  $ref: "#/components/examples/InternalServerError"
      x-amazon-apigateway-integration:
        passthroughBeahavior: when_no_match
        httpMethod: POST
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateBroker.Arn}/invocations"
    put:
      summary: Update broker
      description: Update an existing broker
      requestBody:
        description: Broker update payload
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BrokerUpdateRequest"
            examples:
              request:
                $ref: "#/components/examples/BrokerUpdateRequest"
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BrokerResourceUpdated"
              examples:
                with_acounts_updated:
                  $ref: "#/components/examples/BrokerWithAccountsUpdatedResponse"
                without_acounts_updated:
                  $ref: "#/components/examples/BrokerWithoutAccountsUpdatedResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                bad_request:
                  $ref: "#/components/examples/BrokerValidation"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                unauthorized:
                  $ref: "#/components/examples/Unauthorized"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                not_found:
                  $ref: "#/components/examples/NotFound"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                bad_request:
                  $ref: "#/components/examples/InternalServerError"
      x-amazon-apigateway-integration:
        passthroughBeahavior: when_no_match
        httpMethod: POST
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateBroker.Arn}/invocations"
    delete:
      summary: Delete broker
      description: Delete broker
      requestBody:
        description: Broker delete payload
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BrokerDeleteRequest"
            examples:
              request:
                $ref: "#/components/examples/BrokerDeleteRequest"
      responses:
        204:
          description: Deleted
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                not_found:
                  $ref: "#/components/examples/NotFound"
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        httpMethod: DELETE
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteBroker.Arn}/invocations"


components:
  schemas:
    BrokerRequest:
      type: object
      required:
        - name
        - user_id
      properties:
        name:
          type: string
        user_id:
          type: number
    BrokerUpdateRequest:
      type: object
      required:
        - name
        - uid
        - user_id
      properties:
        name:
          type: string
        uid:
          type: string
          format: uid
        user_id:
          type: number
    BrokerDeleteRequest:
      type: object
      required:
        - uid
        - user_id
      properties:
        uid:
          type: string
          format: uid
        user_id:
          type: number
    ResourceCreated:
      type: object
      properties:
        uid:
          type: string
          format: uid
    BrokerResourceUpdated:
      type: object
      properties:
        uid:
          type: string
          format: uid
        name:
          type: string
        accounts:
          type: array
          items:
            type: object
            properties:
              uid:
                type: string
                format: uid
              type_account:
                type: string
              currency:
                type: string
              initial_balance:
                type: number
              current_balance:
                type: number
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              messages:
                type: array
                items:
                  type: string
              trace_id:
                type: string
                format: uuid
  examples:
    Unauthorized:
      summary: Unauthorized
      value:
        errors:
          - type: unauthorized
            messages: [ "Invalid token" ]
            trace_id: "C3D3DB61-D98F-4839-AC95-D5A2AA14ACFF"
    NotFound:
      summary: Not Found
      value:
        errors:
          - type: not_found
            messages: [ "Resource not found" ]
            trace_id: "C3D3DB61-D98F-4839-AC95-D5A2AA14ACFF"
    InternalServerError:
      summary: Internal Server Error
      value:
        errors:
          - type: network_error
            messages: [ "Internal server error" ]
            trace_id: "C3D3DB61-D98F-4839-AC95-D5A2AA14ACFF"
    BrokerRequest:
      summary: Broker request
      value:
        name: "Forex Broker"
        user_id: 1
    BrokerUpdateRequest:
      summary: Broker update request
      value:
        uid: "53c7cc64-cd0b-493b-9458-34c0e982c098"
        name: "Forex Broker Updated"
        user_id: 1
    BrokerDeleteRequest:
      summary: Broker delete request
      value:
        uid: "2b79b5c4-0978-48cc-8b8d-aee82d386a13"
        user_id: 1
    BrokerValidation:
      summary: BadRequest
      value:
        errors:
          - type: invalid_request
            messages: [ "'name' is a required field" ]
            trace_id: "C3D3DB61-D98F-4839-AC95-D5A2AA14ACFF"
    BrokerWithAccountsUpdatedResponse:
      summary: Broker with accounts updated
      value:
        uid: "E160D0D9-2B1D-471E-BA80-FD6A98755B15"
        name: "Forex Broker Updated"
        accounts:
          - uid: "B2355B88-CB7D-45DF-BE18-50CB83029343"
            type_account: "D"
            currency: "USD"
            initial_balance: 10000.0
            current_balance: 10000.0
          - uid: "3A30F3A3-7328-477D-8CE5-7C18253D04EB"
            type_account: "R"
            currency: "BRL"
            initial_balance: 1000.0
            current_balance: 2000.0
    BrokerWithoutAccountsUpdatedResponse:
      summary: Broker without accounts updated
      value:
        uid: "E160D0D9-2B1D-471E-BA80-FD6A98755B15"
        name: "Forex Broker Updated"
        accounts: [ ]

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

security:
  - ApiKeyAuth: [ ]

# Amazon API gateway OpenApi integration
x-amazon-apigateway-request-validator: all

x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true

x-amazon-apigateway-cors:
  allowOrigins:
    - "*"
  allowMethods:
    - "OPTIONS"
    - "POST"
    - "GET"
  allowHeaders:
    - "x-api-key"
    - "content-type"
    - "authorization"
